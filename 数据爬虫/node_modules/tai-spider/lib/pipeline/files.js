'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var fs = require('fs');

var JsonWriterPipeline = function () {
	function JsonWriterPipeline() {
		_classCallCheck(this, JsonWriterPipeline);
	}

	_createClass(JsonWriterPipeline, [{
		key: 'open_spider',
		value: function open_spider(spider) {
			this.file = fs.createWriteStream(spider.options.filename);
		}
	}, {
		key: 'close_spider',
		value: function close_spider( /* eslint-disable no-unused-vars */spider) {
			this.file.end();
		}
	}, {
		key: 'process_item',
		value: function process_item(item, /* eslint-disable no-unused-vars */spider) {
			var line = JSON.stringify(item) + '\n';
			this.file.write(line);
			return item;
		}
	}]);

	return JsonWriterPipeline;
}();

module.exports = JsonWriterPipeline;